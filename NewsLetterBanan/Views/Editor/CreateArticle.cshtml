@model NewsLetterBanan.Models.ViewModels.CreateArticleViewModel

<!-- Image Generation Section (MOVED OUTSIDE MAIN FORM) -->
<div class="container mt-5">
    <h2 class="text-center mb-4">Image Generator</h2>
    <form id="imageForm" method="post" asp-controller="Article" asp-action="GenerateImage">
        <div class="mb-3">
            <label for="prompt" class="form-label">Enter prompt:</label>
            <input type="text" class="form-control" id="prompt" name="prompt" 
                   placeholder="e.g., a happy monkey sitting in a tree, in watercolor" required />
        </div>
        <button type="submit" class="btn btn-primary">Generate Image</button>
    </form>
</div>

<!-- Result Modal (Fixed visibility) -->
<div id="resultContainer">
    <div id="resultContent">
        <h3>Generated Image</h3>
        <img id="generatedImage" src="" alt="Generated Image" />
        <p id="imageUrlText"></p>
        <button id="closeResult" class="btn btn-secondary mt-3">Close</button>
    </div>
</div>

<form asp-action="CreateArticle" method="post">
    <div class="form-group">
        <label asp-for="Headline"></label>
        <input asp-for="Headline" class="form-control" />
        <span asp-validation-for="Headline" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Content"></label>
        <textarea asp-for="Content" class="form-control"></textarea>
        <span asp-validation-for="Content" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ContentSummary"></label>
        <textarea asp-for="ContentSummary" class="form-control"></textarea>
        <span asp-validation-for="ContentSummary" class="text-danger"></span>
    </div>

    <!-- Images Fields -->
    <div>
        <label asp-for="Titles"></label>
        <input asp-for="Titles" class="form-control" />
        <span asp-validation-for="Titles" class="text-danger"></span>
    </div>

    <div>
        <label asp-for="ImgDescriptions"></label>
        <input asp-for="ImgDescriptions" class="form-control" />
        <span asp-validation-for="ImgDescriptions" class="text-danger"></span>
    </div>

    <div>
        <label asp-for="ImgSourceURLs"></label>
        <input asp-for="ImgSourceURLs" class="form-control" />
        <span asp-validation-for="ImgSourceURLs" class="text-danger"></span>
    </div>

    <div class="form-group form-check">
        <input asp-for="Exclusive" class="form-check-input" />
        <label asp-for="Exclusive" class="form-check-label"></label>
    </div>

    <div>
        <label asp-for="TakenBys"></label>
        <input asp-for="TakenBys" class="form-control" />
        <span asp-validation-for="TakenBys" class="text-danger"></span>
    </div>

    <div>
        <label asp-for="Licenses"></label>
        <input asp-for="Licenses" class="form-control" />
        <span asp-validation-for="Licenses" class="text-danger"></span>
    </div>

    <!-- Tags Section -->
    <div>
        <label for="TagSelect">Select Tags</label>
        <select id="TagSelect" multiple="multiple">
            @foreach (var tag in ViewBag.Tags)
            {
                <option value="@tag.TagName">@tag.TagName</option>
            }
        </select>
    </div>

    <div>
        <label asp-for="TagNames"></label>
        <input asp-for="TagNames" class="form-control" />
        <span asp-validation-for="TagNames" class="text-danger"></span>
    </div>

    <div>
        <label asp-for="TagDescriptions"></label>
        <input asp-for="TagDescriptions" class="form-control" />
        <span asp-validation-for="TagDescriptions" class="text-danger"></span>
    </div>

    <label for="CategorySelect">Select Categories</label>
    <select id="CategorySelect" name="CategorySelect" multiple="multiple" class="form-control">
        @if (ViewBag.Categories != null)

        {
            @foreach (var category in ViewBag.Categories)

            {
                <option value="@category">@category</option>
            }
        }

        else

        {
            <option>No categories available</option>
        }
    </select>

    <!-- Categories Input Fields -->
    <div>
        <label asp-for="CategoryNames"></label>
        <input asp-for="CategoryNames" class="form-control" />
        <span asp-validation-for="CategoryNames" class="text-danger"></span>
    </div>

    <div>
        <label asp-for="CategoryDescriptions"></label>
        <input asp-for="CategoryDescriptions" class="form-control" />
        <span asp-validation-for="CategoryDescriptions" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="SourceURL"></label>
        <input asp-for="SourceURL" class="form-control" />
        <span asp-validation-for="SourceURL" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="IsEditorsChoice"></label>
        <input asp-for="IsEditorsChoice" class="form-check-input" />
    </div>

    <div class="form-group">
        <label asp-for="IsApproved"></label>
        <input asp-for="IsApproved" class="form-check-input" />
    </div>
    <div class="form-group">
        <label asp-for="IsArchived"></label>
        <input asp-for="IsArchived" class="form-check-input" />
    </div>

    <div class="form-group">
        <label asp-for="CommentsOnOff"></label>
        <input asp-for="CommentsOnOff" class="form-check-input" />
    </div>

    <button type="submit" class="btn btn-primary">Create Article</button>
</form>


<style>
    /* Updated modal styles */
    #resultContainer {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;  /* Full width */
        height: 100%; /* Full height */
        background: rgba(0, 0, 0, 0.7);
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

    #resultContent {
        background: white;
        padding: 20px;
        border-radius: 8px;
        text-align: center;
        max-width: 50%;  /* Control width of content */
        margin: 0 auto;  /* Center horizontally */
        position: relative;
        top: 50%;  /* Vertical centering */
        transform: translateY(-50%);
    }

    #resultContent img {
        max-width: 100%;
        max-height: 50vh; /* Prevent image from being too tall */
        height: auto;
        display: block;
        margin: 0 auto;
    }
</style>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const imageForm = document.getElementById('imageForm');
            const generateBtn = imageForm.querySelector('button[type="submit"]');

            imageForm.addEventListener('submit', async function (event) {
                event.preventDefault();

                try {
                    // Show loading state
                    generateBtn.disabled = true;
                    generateBtn.innerHTML = `
                                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                Generating...
                            `;

                    const formData = new FormData(imageForm);
                    const response = await fetch(imageForm.action, {
                        method: 'POST',
                        body: formData,
                        headers: { "X-Requested-With": "XMLHttpRequest" }
                    });

                    if (!response.ok) throw new Error("Network error");

                    const result = await response.json();

                    if (result.imageUrl?.trim()) {
                        document.getElementById('generatedImage').src = result.imageUrl;
                        document.getElementById('imageUrlText').innerHTML =
                            `<a href="${result.imageUrl}" target="_blank">${result.imageUrl}</a>`;
                        document.getElementById('resultContainer').style.display = "flex";
                    } else {
                        alert("No image generated");
                    }
                } catch (error) {
                    console.error("Error:", error);
                    alert("Image generation failed");
                } finally {
                    // Reset loading state
                    generateBtn.disabled = false;
                    generateBtn.innerHTML = 'Generate Image';
                }
            });

            // Close handlers
            document.getElementById('closeResult').addEventListener('click', () => {
                document.getElementById('resultContainer').style.display = "none";
            });

            document.getElementById('resultContainer').addEventListener('click', (e) => {
                if (e.target === e.currentTarget) e.currentTarget.style.display = "none";
            });
        });
    </script>
}