<!-- Image Generation Section (MOVED OUTSIDE MAIN FORM) -->
<div class="container mt-5">
    <h2 class="text-center mb-4">Image Generator</h2>
    <form id="imageForm" method="post" asp-controller="Article" asp-action="GenerateImage">
        <div class="mb-3">
            <label for="prompt" class="form-label">Enter prompt:</label>
            <input type="text" class="form-control" id="prompt" name="prompt" 
                   placeholder="e.g., a happy monkey sitting in a tree, in watercolor" required />
        </div>
        <button type="submit" class="btn btn-primary">Generate Image</button>
    </form>
</div>

<!-- Result Modal (Fixed visibility) -->
<div id="resultContainer">
    <div id="resultContent">
        <h3>Generated Image</h3>
        <img id="generatedImage" src="" alt="Generated Image" />
        <p id="imageUrlText"></p>
        <button id="closeResult" class="btn btn-secondary mt-3">Close</button>
    </div>
</div>


<style>
    /* Updated modal styles */
   /* Modal styles */
    #resultContainer {
        display: none; /* Keeps modal hidden until triggered */
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.7);
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

    #resultContent {
        background: white;
        padding: 20px;
        border-radius: 8px;
        text-align: center;
        max-width: 80%;
        max-height: 90vh; /* Prevents content from going out of screen */
        overflow-y: auto; /* Enables scrolling if content is too big */
        word-wrap: break-word; /* Prevents text from overflowing */
        white-space: normal; /* Ensures text wraps properly */
    }


        #resultContent img {
            max-width: 100%;
            max-height: 70vh; /* Prevent image from being too tall */
            height: auto;
            display: block;
            margin: 0 auto;
        }
</style>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

        <script>
            document.addEventListener("DOMContentLoaded", function () {
                const imageForm = document.getElementById('imageForm');
                const generateBtn = imageForm.querySelector('button[type="submit"]');

                imageForm.addEventListener('submit', async function (event) {
                    event.preventDefault();

                    try {
                        // Show loading state
                        generateBtn.disabled = true;
                        generateBtn.innerHTML = `
                                            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                            Generating...
                                        `;

                        const formData = new FormData(imageForm);
                        const response = await fetch(imageForm.action, {
                            method: 'POST',
                            body: formData,
                            headers: { "X-Requested-With": "XMLHttpRequest" }
                        });

                        if (!response.ok) throw new Error("Network error");

                        const result = await response.json();

                        if (result.imageUrl?.trim()) {
                            document.getElementById('generatedImage').src = result.imageUrl;
                            document.getElementById('imageUrlText').innerHTML =
                                `<a href="${result.imageUrl}" target="_blank">${result.imageUrl}</a>`;
                            document.getElementById('resultContainer').style.display = "flex";
                        } else {
                            alert("No image generated");
                        }
                    } catch (error) {
                        console.error("Error:", error);
                        alert("Image generation failed");
                    } finally {
                        // Reset loading state
                        generateBtn.disabled = false;
                        generateBtn.innerHTML = 'Generate Image';
                    }
                });

                // Close handlers
                document.getElementById('closeResult').addEventListener('click', () => {
                    document.getElementById('resultContainer').style.display = "none";
                });

                document.getElementById('resultContainer').addEventListener('click', (e) => {
                    if (e.target === e.currentTarget) e.currentTarget.style.display = "none";
                });
            });
        </script>
}