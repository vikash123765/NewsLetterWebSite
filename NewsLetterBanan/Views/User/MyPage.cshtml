@model NewsLetterBanan.ViewModels.MyPageViewModel

<div class="container my-5">
    <div class="text-center mb-4">
        <h2 class="display-5">Welcome, @Model.UserName!</h2>
        <p class="lead text-muted">Manage your subscriptions, comments, and liked content</p>
    </div>

    <!-- Profile Card -->
    <div class="card shadow-sm mb-5">
        <div class="card-body">
            <h4 class="card-title mb-4">Your Profile</h4>
            <div class="row">
                <div class="col-md-6">
                    <p><strong>First Name:</strong> @Model.FirstName</p>
                    <p><strong>Last Name:</strong> @Model.LastName</p>
                    <p><strong>Phone Number:</strong> @Model.PhoneNumber</p>
                </div>
                <div class="col-md-6">
                    <p><strong>Email:</strong> @Model.Email</p>
                    <p><strong>City:</strong> @Model.City</p>
                    <p><strong>Country:</strong> @Model.Country</p>
                </div>
            </div>
            <a asp-controller="User" asp-action="Edit" class="btn btn-primary mt-3">Edit Profile</a>
        </div>
    </div>

    <!-- Liked Articles Section -->
    <div id="liked-articles-section" class="mb-5">
        <h3 class="mb-4">Your Liked Articles</h3>
        @if (Model.UserLikedArticles.Any())
        {
            <div class="card">
                <div class="card-body">
                    <ul class="list-group list-group-flush">
                        @foreach (var article in Model.UserLikedArticles)
                        {
                            <li class="list-group-item d-flex flex-column flex-md-row justify-content-between align-items-center">
                                <div class="mb-2 mb-md-0">
                                    <strong>Article:</strong>
                                    <a asp-action="ViewArticle"
                                       asp-controller="Article"
                                       asp-route-id="@article.Id"
                                       asp-fragment="article-@article.Id"
                                       class="text-decoration-none">
                                        @article.Headline
                                    </a>
                                    <p class="text-muted mb-0"><small>Liked on: @article.DateStamp.ToString("yyyy-MM-dd HH:mm")</small></p>
                                </div>
                                <form method="post" asp-action="LikeArticle" asp-controller="User" asp-fragment="liked-articles-section">
                                    <input type="hidden" name="ArticleId" value="@article.Id" />
                                    <button type="submit" class="btn btn-danger btn-sm">Unlike</button>
                                </form>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        }
        else
        {
            <p class="text-muted">You haven't liked any articles yet.</p>
        }
    </div>

    <!-- User Comments Section -->
    <div id="comments-section" class="mb-5">
        <h3 class="mb-4">Your Comments</h3>
        @if (Model.UserComments.Any())
        {
            <div class="card">
                <div class="card-body">
                    <ul class="list-group list-group-flush">
                        @foreach (var comment in Model.UserComments)
                        {
                            <li id="comment-@comment.Id" class="list-group-item d-flex flex-column flex-md-row justify-content-between align-items-center">
                                <div class="mb-2 mb-md-0">
                                    <strong>Article: </strong>
                                    <a asp-action="ViewArticle"
                                       asp-controller="Article"
                                       asp-route-id="@comment.Article.Id"
                                       class="text-decoration-none">
                                        @comment.Article.Headline
                                    </a>
                                    <br />
                                    <strong>My comment: </strong>
                                    <a asp-action="ViewArticle"
                                       asp-controller="Article"
                                       asp-route-id="@comment.Article.Id"
                                       asp-fragment="comment-@comment.Id"
                                       class="text-decoration-none">
                                        @comment.Content
                                    </a>
                                    <p class="text-muted mb-0"><small>Commented on: @comment.DateStamp.ToString("yyyy-MM-dd HH:mm")</small></p>
                                </div>
                                <div class="d-flex flex-wrap gap-2">
                                    <form method="post" asp-action="DeleteComment" asp-controller="User" class="mb-0" onsubmit="saveScrollPosition()">
                                        <input type="hidden" name="CommentId" value="@comment.Id" />
                                        <input type="hidden" name="UserId" value="@Model.UserId" />
                                        <button type="submit" class="btn btn-danger btn-sm">ðŸ—‘</button>
                                    </form>
                                    <form method="post" asp-action="UpdateComment" asp-controller="User" asp-fragment="comment-@comment.Id" class="d-flex flex-wrap gap-2 mb-0">
                                        <input type="hidden" name="commentId" value="@comment.Id" />
                                        <textarea name="newContent" class="form-control form-control-sm" required style="width: 200px; height: 30px;"></textarea>
                                        <button type="submit" class="btn btn-warning btn-sm">ðŸ”„</button>
                                    </form>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        }
        else
        {
            <p class="text-muted">You haven't made any comments yet.</p>
        }
    </div>

    <!-- Liked Comments Section -->
    <div id="liked-comments-section" class="mb-5">
        <h3 class="mb-4">Your Liked Comments</h3>
        @if (Model.UserCommentsLikes.Any())
        {
            <div class="card">
                <div class="card-body">
                    <ul class="list-group list-group-flush">
                        @foreach (var comment in Model.UserCommentsLikes)
                        {
                            <li class="list-group-item d-flex flex-column flex-md-row justify-content-between align-items-center">
                                <div class="mb-2 mb-md-0">
                                    <strong>Article: </strong>
                                    <a asp-action="ViewArticle"
                                       asp-controller="Article"
                                       asp-route-id="@comment.Article.Id"
                                       class="text-decoration-none">
                                        @comment.Article.Headline
                                    </a>
                                    <br />
                                    <strong>Comment:  </strong>
                                    <a asp-action="ViewArticle"
                                       asp-controller="Article"
                                       asp-route-id="@comment.Article.Id"
                                       asp-fragment="comment-@comment.Id"
                                       class="text-decoration-none">
                                        @comment.Content
                                    </a>
                                    <p class="text-muted mb-0"><small>Liked on: @comment.DateStamp.ToString("yyyy-MM-dd HH:mm")</small></p>
                                </div>
                                <form method="post" asp-action="LikeComment" asp-controller="User" asp-fragment="liked-comments-section" class="mb-0">
                                    <input type="hidden" name="CommentId" value="@comment.Id" />
                                    <button type="submit" class="btn btn-danger btn-sm">Unlike</button>
                                </form>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        }
        else
        {
            <p class="text-muted">You haven't liked any comments yet.</p>
        }
    </div>

    <!-- Your Comment Replies Section -->
    <div id="comment-replies-section" class="mb-5">
        <h3 class="mb-4">Your Comment Replies</h3>
        @if (Model.UserCommentReplies.Any())
        {
            <div class="card">
                <div class="card-body">
                    <ul class="list-group list-group-flush">
                        @foreach (var reply in Model.UserCommentReplies)
                        {
                            <li class="list-group-item d-flex flex-column flex-md-row justify-content-between align-items-center">
                                <div class="mb-2 mb-md-0">
                                    <strong>Article: </strong>
                                    <a asp-action="ViewArticle"
                                       asp-controller="Article"
                                       asp-route-id="@reply.Comment.Article.Id"
                                       class="text-decoration-none">
                                        @reply.Comment.Article.Headline
                                    </a>
                                    <br />
                                    <strong>Parent Comment:</strong>
                                    <a asp-action="ViewArticle"
                                       asp-controller="Article"
                                       asp-route-id="@reply.Comment.Article.Id"
                                       asp-fragment="comment-@reply.Comment.Id"
                                       class="text-decoration-none">
                                        @reply.Comment.Content
                                    </a>
                                    <br />
                                    <strong>My Reply:</strong>
                                    <a asp-action="ViewArticle"
                                       asp-controller="Article"
                                       asp-route-id="@reply.Comment.Article.Id"
                                       asp-fragment="reply-@reply.Id"
                                       class="text-decoration-none">
                                        @reply.Content
                                    </a>
                                    <p class="text-muted mb-0"><small>Replied on: @reply.DateStamp.ToString("yyyy-MM-dd HH:mm")</small></p>
                                </div>
                                <div class="d-flex flex-wrap gap-2">
                                    <form method="post" asp-action="DeleteReply" asp-controller="User" asp-fragment="comment-replies-section" class="mb-0">
                                        <input type="hidden" name="replyId" value="@reply.Id" />
                                        <button type="submit" class="btn btn-danger btn-sm">ðŸ—‘</button>
                                    </form>
                                    <form method="post" asp-action="UpdateReply" asp-controller="User" asp-fragment="comment-replies-section" class="d-flex flex-wrap gap-2 mb-0">
                                        <input type="hidden" name="replyId" value="@reply.Id" />
                                        <textarea name="newContent" class="form-control form-control-sm" required style="width: 200px; height: 30px;"></textarea>
                                        <button type="submit" class="btn btn-warning btn-sm">ðŸ”„</button>
                                    </form>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        }
        else
        {
            <p class="text-muted">You haven't made any comment replies yet.</p>
        }
    </div>

    <!-- Liked Replies Section -->
    <div id="liked-replies-section" class="mb-5">
        <h3 class="mb-4">Your Liked Replies</h3>
        @if (Model.UserLikedCommentReplies.Any())
        {
            <div class="card">
                <div class="card-body">
                    <ul class="list-group list-group-flush">
                        @foreach (var reply in Model.UserLikedCommentReplies)
                        {
                            <li class="list-group-item d-flex flex-column flex-md-row justify-content-between align-items-center">
                                <div class="mb-2 mb-md-0">
                                    <strong>Article: </strong>
                                    <a asp-action="ViewArticle"
                                       asp-controller="Article"
                                       asp-route-id="@reply.Comment.Article.Id"
                                       class="text-decoration-none">
                                        @reply.Comment.Article.Headline
                                    </a>
                                    <br />
                                    <strong>Parent Comment:</strong>
                                    <a asp-action="ViewArticle"
                                       asp-controller="Article"
                                       asp-route-id="@reply.Comment.Article.Id"
                                       asp-fragment="comment-@reply.Comment.Id"
                                       class="text-decoration-none">
                                        @reply.Comment.Content
                                    </a>
                                    <br />
                                    <strong>Liked Reply: </strong>
                                    <a asp-action="ViewArticle"
                                       asp-controller="Article"
                                       asp-route-id="@reply.Comment.Article.Id"
                                       asp-fragment="reply-@reply.Id"
                                       class="text-decoration-none">
                                        @reply.Content
                                    </a>
                                    <p class="text-muted mb-0"><small>Liked on: @reply.DateStamp.ToString("yyyy-MM-dd HH:mm")</small></p>
                                </div>
                                <form method="post" asp-action="LikeReply" asp-controller="User" asp-fragment="liked-replies-section" class="mb-0">
                                    <input type="hidden" name="ReplyId" value="@reply.Id" />
                                    <button type="submit" class="btn btn-danger btn-sm">Unlike</button>
                                </form>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        }
        else
        {
            <p class="text-muted">You haven't liked any replies yet.</p>
        }
    </div>

    @if (!User.IsInRole("Admin"))
    {
        <!-- Subscription Button -->
        <div class="text-center mb-5">
            <a href="@Url.Action("CreateSubscriptionForm", "User")" class="btn btn-primary btn-lg">Subscribe Now</a>
        </div>

        <!-- Subscriptions Section -->
        <div class="mb-5">
            <h3 class="mb-4">Your Subscriptions</h3>
            @if (Model.Subscriptions.Any())
            {
                <div class="card">
                    <div class="card-body">
                        <ul class="list-group list-group-flush">
                            @foreach (var subscription in Model.Subscriptions)
                            {
                                <li class="list-group-item">
                                    <strong>@subscription.SubscriptionType.TypeName</strong> -
                                    Price: @subscription.Price.ToString("C") -
                                    Expires on: @subscription.Expires.ToShortDateString()
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            }
            else
            {
                <p class="text-muted">You are not subscribed to any plans.</p>
            }
        </div>

        <!-- Exclusive Articles Section -->
        <div id="exclusive-articles-section" class="mb-5">
            <h3 class="mb-4">Exclusive Articles in Your Subscribed Categories</h3>
            @if (Model.ExclusiveArticles != null && Model.ExclusiveArticles.Any())
            {
                <div class="row">
                    @foreach (var item in Model.ExclusiveArticles)
                    {
                        <div class="col-md-6 mb-4" id="exclusive-@item.Id">
                            <div class="card shadow-sm h-100 border-0">
                                <div class="card-header bg-primary bg-opacity-75 text-white">
                                    <h4 class="card-title mb-0">@item.Headline</h4>
                                </div>
                                <div class="card-body">
                                    <p class="card-text">
                                        @(item.Content.Length > 200 ? item.Content.Substring(0, 200) + "..." : item.Content)
                                    </p>
                                    <a href="@Url.Action("ViewArticle", "Article", new { id = item.Id })" class="btn btn-success btn-sm">Read More</a>
                                    <p class="mt-2 small"><strong>By:</strong> @(item.User != null ? $"{item.User.FirstName} {item.User.LastName}" : "Unknown Author")</p>
                                    <p class="small"><strong>Category:</strong> @(item.Categories?.Count > 0 ? string.Join(", ", item.Categories.Select(c => c.Name)) : "No Category")</p>
                                    <p class="small"><strong>Tags:</strong> @(item.Tags?.Count > 0 ? string.Join(", ", item.Tags.Select(t => t.TagName)) : "No Tags")</p>

                                    <!-- Images Section -->
                                    @if (item.Images != null && item.Images.Any())
                                    {
                                        <div class="mt-3">
                                            <strong class="small">Images:</strong>
                                            <ul class="list-unstyled">
                                                @foreach (var img in item.Images)
                                                {
                                                    <li class="mb-2">
                                                        <img src="@img.ImgSourceURL" class="img-fluid rounded img-article" alt="@img.Title" style="max-height: 150px; object-fit: cover;" />
                                                        <p class="small mt-1"><strong>Title:</strong> @img.Title</p>
                                                        <p class="small"><strong>Description:</strong> @img.ImgDescription</p>
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    }

                                    <p class="small"><strong>Likes:</strong> @(ViewBag.LikeCounts.ContainsKey(item.Id) ? ViewBag.LikeCounts[item.Id] : 0)</p>

                                    <form method="post" class="like-form" data-article-id="@item.Id" onsubmit="likeArticle(event, @item.Id)">
                                        <input type="hidden" name="articleId" value="@item.Id" />
                                        <input type="hidden" name="source" value="HomePage" />
                                        <button type="submit" class="btn btn-sm btn-outline-primary like-btn">
                                            @(ViewBag.IsLiked.ContainsKey(item.Id) ? "Unlike" : "Like")

                                        </button>
                                        <span class="like-count">
                                            @(ViewBag.LikeCounts.ContainsKey(item.Id) ? ViewBag.LikeCounts[item.Id] : 0)
                                        </span>


                                    </form>
                                    <p class="small"><strong>Comments:</strong> @(ViewBag.CommentCounts.ContainsKey(item.Id) ? ViewBag.CommentCounts[item.Id] : 0)</p>
                                    <p class="small"><strong>Views:</strong> @(ViewBag.ViewCounts.ContainsKey(item.Id) ? ViewBag.ViewCounts[item.Id] : 0)</p>
                                    <p class="small"><strong>Published:</strong> @item.DateStamp.ToString("MMMM dd, yyyy")</p>
                                </div>
                            </div>
                        </div> <!-- Close col-md-6 -->
                    }
                </div> <!-- Close row -->
            }
            else
            {
                <p class="text-muted">No articles available.</p>
            }
        </div> <!-- Close exclusive-articles-section -->
    }
    else
    {
        <p class="text-danger text-center">Admins do not have access to subscriptions or exclusive articles.</p>
    }

<!-- JavaScript for Smooth Scrolling After Page Reload -->
<script>

    function saveScrollPosition() {
        localStorage.setItem("scrollPosition", window.scrollY);
    }
    document.addEventListener("DOMContentLoaded", function () {
        // Check for saved scroll position
        let scrollY = localStorage.getItem("scrollPosition");
        if (scrollY) {
            localStorage.removeItem("scrollPosition"); // Clear stored position after using it
            window.scrollTo({ top: scrollY, behavior: "smooth" });
        }

        // Existing fragment scroll behavior
        if (window.location.hash) {
            var element = document.querySelector(window.location.hash);
            if (element) {
                setTimeout(() => {
                    element.scrollIntoView({ behavior: "smooth", block: "start" });
                }, 500); // Slight delay to ensure page has fully loaded
            }
        }
    });
        document.querySelectorAll(".like-form").forEach(form => {
            form.addEventListener("submit", function (event) {
                event.preventDefault(); // Prevent full page reload

                var formData = new FormData(this);
                var articleId = this.getAttribute("data-article-id");

                fetch("/User/LikeArticle", {
                    method: "POST",
                    body: formData,
                    headers: { "X-Requested-With": "XMLHttpRequest" }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Update like button text
                            let button = this.querySelector(".like-btn");
                            button.textContent = data.isLiked ? "Unlike" : "Like";

                            // Update like count
                            let likeCountElement = this.closest(".card-body").querySelector(".like-count");
                            if (likeCountElement) {
                                likeCountElement.textContent = `Likes: ${data.likeCount}`;
                            }
                        } else {
                            alert(data.message);
                        }
                    })
                    .catch(error => console.error("Error:", error));
            });

        });


    function handleFormSubmit(event) {
        // Call checkLogin first
        if (!checkLogin(event)) {
            return false; // Stop form submission if checkLogin fails
        }

        // Call saveScrollPosition
        saveScrollPosition();

        // Allow form submission to proceed
        return true;
    }
    function checkLogin(event) {
        if (!userIsLoggedIn) { // Replace with your login check logic
            alert("Please log in to like this article.");
            return false; // Stop form submission
        }
        return true; // Allow form submission
    }

    function toggleReplyUpdateForm(replyId) {
        var form = document.getElementById("reply-update-form-" + replyId);
        form.style.display = form.style.display === "none" ? "block" : "none";
    }
</script>





<!-- Style for Consistent Image Sizing -->
<style>
    .img-article {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }
</style>